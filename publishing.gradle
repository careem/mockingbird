/**
 *
 * Copyright Careem, an Uber Technologies Inc. company
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'maven-publish'
apply plugin: 'signing'

// Stub secrets to let the project sync and build without the publication values set up
rootProject.ext["signing.keyId"] = null
rootProject.ext["signing.password"] = null
rootProject.ext["signing.key"] = null
rootProject.ext["ossrhUsername"] = null
rootProject.ext["ossrhPassword"] = null

// Grabbing secrets from local.properties file or from environment variables, which could be used on CI
File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {    // Read local.properties file first if it exists
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> rootProject.ext[name] = value }
} else {
    // Use system environment variables
    rootProject.ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    rootProject.ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    rootProject.ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    rootProject.ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    rootProject.ext["signing.key"] = System.getenv('SIGNING_KEY')
}

afterEvaluate {
    publishing {
        publications {
            all(MavenPublication) {
                pom {
                    name = POM_NAME
                    description = POM_DESCRIPTION
                    url = POM_SCM_URL

                    scm {
                        url = POM_SCM_URL
                    }
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            organization = POM_DEVELOPER_ORG
                            organizationUrl = POM_DEVELOPER_URL
                        }
                    }
                }

            }
        }

        repositories {
            maven {
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
                if (project.version.endsWith('-SNAPSHOT')) {
                    name = "snapshots"
                    println("publishing snapshot for $project.name version $project.version")
                    url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                } else {
                    name "sonatype"
                    println("publishing for $project.name version $project.version")
                    url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                }
            }
        }
    }
}


signing {
    useInMemoryPgpKeys(
            rootProject.ext["signing.keyId"],
            rootProject.ext["signing.key"],
            rootProject.ext["signing.password"],
    )
    sign publishing.publications
}